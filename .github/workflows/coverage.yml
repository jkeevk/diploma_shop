name: Django CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 5430:5432
        env:
          DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

      - name: Build and start services
        run: |
          docker-compose -f docker-compose.yml up -d --build

      - name: Wait for services to be ready
        run: |
          echo '=== WAITING FOR CONTAINERS TO BE READY ==='
          until docker-compose exec -T app curl -s http://localhost:8000 > /dev/null; do
            echo 'Waiting for app container to be ready...'
            sleep 2
          done

      - name: Clear Redis cache
        run: |
          echo '=== CLEARING REDIS CACHE ==='
          docker-compose exec -T redis redis-cli FLUSHALL

      - name: Flush database
        run: |
          echo '=== FLUSHING DATABASE ==='
          docker-compose exec -T app python manage.py flush --noinput

      - name: Apply migrations
        run: |
          echo '=== APPLYING MIGRATIONS ==='
          docker-compose exec -T app python manage.py makemigrations backend
          docker-compose exec -T app python manage.py migrate
          docker-compose exec -T app python manage.py collectstatic --noinput

      - name: Run tests inside the container
        run: |
          echo '=== RUNNING TESTS INSIDE CONTAINER ==='
          docker-compose exec -T app pytest --cov=backend --cov-report=xml:/app/coverage/coverage.xml

      - name: Copy coverage report from container to host
        run: |
          echo '=== COPYING COVERAGE REPORT ==='
          docker cp diploma_shop_app_1:/app/coverage/coverage.xml ./coverage.xml

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage.xml

      - name: Shutdown Docker Compose
        run: docker-compose down
